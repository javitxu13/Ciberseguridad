{"ast":null,"code":"var _jsxFileName = \"/home/javitxu13/Escritorio/test_firebase/src/page/CybersecurityStats.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport '../css/CybersecurityStats.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CybersecurityStats = _ref => {\n  _s();\n  let {\n    attacksDetained,\n    urlsBlocked,\n    objectsNeutralized\n  } = _ref;\n  const [attacksPercent, setAttacksPercent] = useState(0);\n  const [urlsPercent, setUrlsPercent] = useState(0);\n  const [objectsPercent, setObjectsPercent] = useState(0);\n  useEffect(() => {\n    // Función para calcular la proporción de cada estadística\n    const calculatePercentage = (value, maxValue) => {\n      const percentage = value / maxValue * 100;\n      return Math.min(100, Math.max(90, percentage)); // Limitar la proporción entre 90% y 100%\n    };\n\n    // Obtener el valor máximo entre las tres estadísticas\n    const maxValue = Math.max(attacksDetained, urlsBlocked, objectsNeutralized);\n\n    // Calcular la proporción para cada estadística\n    const attacksPercentValue = calculatePercentage(attacksDetained, maxValue);\n    const urlsPercentValue = calculatePercentage(urlsBlocked, maxValue);\n    const objectsPercentValue = calculatePercentage(objectsNeutralized, maxValue);\n\n    // Calcular el tiempo de animación según la proporción\n    const animationDuration = 2000; // Un valor fijo para que todas las animaciones tengan la misma duración\n\n    // Función para animar los porcentajes de manera progresiva\n    const animatePercentages = () => {\n      const animateValue = (statValue, setStatPercent) => {\n        let currentPercent = 0;\n        const interval = setInterval(() => {\n          currentPercent += 1;\n          setStatPercent(currentPercent);\n          if (currentPercent >= statValue) {\n            clearInterval(interval);\n          }\n        }, animationDuration);\n      };\n\n      // Animar cada porcentaje\n      animateValue(attacksPercentValue, setAttacksPercent);\n      animateValue(urlsPercentValue, setUrlsPercent);\n      animateValue(objectsPercentValue, setObjectsPercent);\n    };\n    animatePercentages();\n  }, [attacksDetained, urlsBlocked, objectsNeutralized]);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"cybersecurity-stats-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"cybersecurity-stats-heading\",\n      children: \"L\\xEDder mundial en ciberseguridad\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cybersecurity-stats-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stat-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"stat-label\",\n          children: \"Ciberataques detenidos\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"stat-value\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [attacksPercent, \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this), \" (\", attacksDetained, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stat-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"stat-label\",\n          children: \"URL maliciosas bloqueadas\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"stat-value\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [urlsPercent, \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this), \" (\", urlsBlocked, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stat-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"stat-label\",\n          children: \"Objetos maliciosos neutralizados\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"stat-value\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [objectsPercent, \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this), \" (\", objectsNeutralized, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(CybersecurityStats, \"WRED0JIaSoClBafF3rj01HYsC04=\");\n_c = CybersecurityStats;\nexport default CybersecurityStats;\nvar _c;\n$RefreshReg$(_c, \"CybersecurityStats\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","CybersecurityStats","_ref","_s","attacksDetained","urlsBlocked","objectsNeutralized","attacksPercent","setAttacksPercent","urlsPercent","setUrlsPercent","objectsPercent","setObjectsPercent","calculatePercentage","value","maxValue","percentage","Math","min","max","attacksPercentValue","urlsPercentValue","objectsPercentValue","animationDuration","animatePercentages","animateValue","statValue","setStatPercent","currentPercent","interval","setInterval","clearInterval","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/javitxu13/Escritorio/test_firebase/src/page/CybersecurityStats.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport '../css/CybersecurityStats.css';\n\nconst CybersecurityStats = ({ attacksDetained, urlsBlocked, objectsNeutralized }) => {\n  const [attacksPercent, setAttacksPercent] = useState(0);\n  const [urlsPercent, setUrlsPercent] = useState(0);\n  const [objectsPercent, setObjectsPercent] = useState(0);\n\n  useEffect(() => {\n    // Función para calcular la proporción de cada estadística\n    const calculatePercentage = (value, maxValue) => {\n      const percentage = (value / maxValue) * 100;\n      return Math.min(100, Math.max(90, percentage)); // Limitar la proporción entre 90% y 100%\n    };\n\n    // Obtener el valor máximo entre las tres estadísticas\n    const maxValue = Math.max(attacksDetained, urlsBlocked, objectsNeutralized);\n\n    // Calcular la proporción para cada estadística\n    const attacksPercentValue = calculatePercentage(attacksDetained, maxValue);\n    const urlsPercentValue = calculatePercentage(urlsBlocked, maxValue);\n    const objectsPercentValue = calculatePercentage(objectsNeutralized, maxValue);\n\n    // Calcular el tiempo de animación según la proporción\n    const animationDuration = 2000; // Un valor fijo para que todas las animaciones tengan la misma duración\n\n    // Función para animar los porcentajes de manera progresiva\n    const animatePercentages = () => {\n      const animateValue = (statValue, setStatPercent) => {\n        let currentPercent = 0;\n        const interval = setInterval(() => {\n          currentPercent += 1;\n          setStatPercent(currentPercent);\n          if (currentPercent >= statValue) {\n            clearInterval(interval);\n          }\n        }, animationDuration);\n      };\n\n      // Animar cada porcentaje\n      animateValue(attacksPercentValue, setAttacksPercent);\n      animateValue(urlsPercentValue, setUrlsPercent);\n      animateValue(objectsPercentValue, setObjectsPercent);\n    };\n\n    animatePercentages();\n  }, [attacksDetained, urlsBlocked, objectsNeutralized]);\n\n  return (\n    <section className=\"cybersecurity-stats-container\">\n      <h2 className=\"cybersecurity-stats-heading\">Líder mundial en ciberseguridad</h2>\n      <div className=\"cybersecurity-stats-content\">\n        <div className=\"stat-item\">\n          <p className=\"stat-label\">Ciberataques detenidos</p>\n          <p className=\"stat-value\">\n            <strong>{attacksPercent}%</strong> ({attacksDetained})\n          </p>\n        </div>\n        <div className=\"stat-item\">\n          <p className=\"stat-label\">URL maliciosas bloqueadas</p>\n          <p className=\"stat-value\">\n            <strong>{urlsPercent}%</strong> ({urlsBlocked})\n          </p>\n        </div>\n        <div className=\"stat-item\">\n          <p className=\"stat-label\">Objetos maliciosos neutralizados</p>\n          <p className=\"stat-value\">\n            <strong>{objectsPercent}%</strong> ({objectsNeutralized})\n          </p>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default CybersecurityStats;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}